name: Deploy user-service
on:
  push:
    branches:
      - master
    paths:
      - 'backend/**'
      - 'cloud/gcp/backend/**'
      - '.github/workflows/deploy-user-service.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Use cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-backend-ci-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-ci-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          npm ci --silent

      - name: Build package ready for gcp
        working-directory: ./backend
        run: |
          npm run build:us
          mv dist/* ../cloud/gcp/backend/user-service/dist

      - name: Add dependencies to target package.json
        working-directory: ./backend
        run: |
          jq -n 'input | .dependencies |= input.dependencies' ../cloud/gcp/backend/user-service/package.json package.json > ../cloud/gcp/backend/user-service/target-package.json

      - name: Replace incomplete package.json with target package.json
        working-directory: ./cloud/gcp/backend/user-service
        run: |
          rm package.json
          mv target-package.json package.json

      - name: GCP authenticate as service account
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy service to app engine
        working-directory: ./cloud/gcp/backend/user-service
        env:
          CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
          LOG_COLLECTOR_TOKEN: ${{ secrets.LOG_COLLECTOR_TOKEN }}
          MQ_ADDRESS: ${{ secrets.MQ_ADDRESS }}
          SEARCH_REQUESTS_RESOURCE_ADDRESS: ${{ secrets.SEARCH_REQUESTS_RESOURCE_ADDRESS }}
          HOTELS_RESOURCE_ADDRESS: ${{ secrets.HOTELS_RESOURCE_ADDRESS }}
        run: |
          sed -i 's#__CORS_ORIGINS__#'"$CORS_ORIGINS"'#' app.yaml
          sed -i 's#__LOG_COLLECTOR_TOKEN__#'"$LOG_COLLECTOR_TOKEN"'#' app.yaml
          sed -i 's#__MQ_ADDRESS__#'"$MQ_ADDRESS"'#' app.yaml
          sed -i 's#__SEARCH_REQUESTS_RESOURCE_ADDRESS__#'"$SEARCH_REQUESTS_RESOURCE_ADDRESS"'#' app.yaml
          sed -i 's#__HOTELS_RESOURCE_ADDRESS__#'"$HOTELS_RESOURCE_ADDRESS"'#' app.yaml
          gcloud config set project ${{ secrets.GCLOUD_PROJECT }}
          gcloud -q app deploy -v $GITHUB_SHA

      - name: Deploy dispatch to app engine
        working-directory: ./cloud/gcp/backend
        run: |
          gcloud -q app deploy dispatch.yaml -v $GITHUB_SHA
