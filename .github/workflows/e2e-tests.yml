name: e2e tests
on:
  push:
    branches:
      - add-test-framework
    paths:
      - 'backend/**'
      - 'test-framework/**'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches:
      - master
env:
  DOCKER_TAG: dc-e2e-tests

jobs:
  publish_data-collector:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Publish data-collector with tag ${{env.DOCKER_TAG}} to registry
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/kb-data-collector.Dockerfile
          push: true
          tags: piotrwest/kb-data-collector:${{env.DOCKER_TAG}}

  run_data-collector_e2e:
    runs-on: ubuntu-latest
    needs: [publish_data-collector]
    services:
      rabbitmq:
        image: rabbitmq:3-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: dev
          RABBITMQ_DEFAULT_PASS: dev
        ports:
          - 15672:15672
          - 5672:5672
        options: -v ${{ github.workspace }}/backend/mq/rmq-definitions.json:/etc/rabbitmq/definitions.json
#
#      firebase-test:
#        image:
#
      mongo:
        image: mongo
        ports:
          - 27017:27017

      data-collector:
        image: piotrwest/kb-data-collector:$DOCKER_TAG
        env:
          NODE_ENV: dev
          PORT: 8080
          LOG_LEVEL: debug
          MONGO_ADDRESS: mongodb://mongo:27017/dev
          FIRESTORE_PROJECT_ID: dev
          FIRESTORE_EMULATOR_HOST: firestore
          FIRESTORE_EMULATOR_PORT: 8080
          MQ_ADDRESS: amqp://dev:dev@rabbitmq:5672
          MQ_COLLECTING_SCENARIO_QUEUE_NAME: collecting-scenario
          MQ_DATA_COLLECTION_NOTIFICATIONS_QUEUE_NAME: data-collection-notifications
          MQ_DATA_TO_PROCESS_QUEUE_NAME: data-to-process
        ports:
          - 8080:8080

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Inspect
        run: |
          docker image ls
          docker ps -a
