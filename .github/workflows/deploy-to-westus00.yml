name: Deploy to westus00
on:
  push:
    branches:
      - master
    paths:
      - 'backend/**'
      - 'cloud/opc/westus00/**'
      - '.github/workflows/deploy-to-westus00.yml'

jobs:
  publish_search-queue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # takes branch name as a tag
      # in case of master takes 'latest'
      # in case of PR takes $GITHUB_SH
      - name: Publish search-queue-manager to registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: piotrwest/kb-search-queue-manager
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          workdir: backend
          dockerfile: kb-search-queue-manager.Dockerfile

  publish_search-result-calculator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # takes branch name as a tag
      # in case of master takes 'latest'
      # in case of PR takes $GITHUB_SH
      - name: Publish search-result-calculator to registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: piotrwest/kb-search-result-calculator
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          workdir: backend
          dockerfile: kb-search-result-calculator.Dockerfile

  publish_top-hotels-aggregator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create firestore service accont key json
        working-directory: ./backend
        env:
          FIRESTORE_SERVICE_ACCOUNT_KEY_JSON: ${{ secrets.FIRESTORE_SERVICE_ACCOUNT_KEY_JSON }}
        run: |
          echo "$FIRESTORE_SERVICE_ACCOUNT_KEY_JSON" >> db/firestore/service-account-key.json

      # takes branch name as a tag
      # in case of master takes 'latest'
      # in case of PR takes $GITHUB_SH
      - name: Publish top-hotels-aggregator to registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: piotrwest/kb-top-hotels-aggregator
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          workdir: backend
          dockerfile: kb-top-hotels-aggregator.Dockerfile

  deploy_all_services:
    needs: [publish_search-queue-manager, publish_search-result-calculator, publish_top-hotels-aggregator]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.WESTUS00_KEY }}

      - name: Deploy services to westus00
        env:
          CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
          LOG_COLLECTOR_TOKEN: ${{ secrets.LOG_COLLECTOR_TOKEN }}
          FIRESTORE_PROJECT_ID: ${{ secrets.FIRESTORE_PROJECT_ID }}
          MONGO_ADDRESS: ${{ secrets.MONGO_ADDRESS }}
          MQ_ADDRESS: ${{ secrets.MQ_ADDRESS }}
        run: |
          ssh -T -o StrictHostKeyChecking=no -l ${{ secrets.WESTUS00_USER }} ${{ secrets.WESTUS00_HOST }} << EOF
            uptime
            cd ~/app
            git fetch
            git reset --hard origin/master
            cd cloud/opc/westus00
            echo "CORS_ORIGINS=$CORS_ORIGINS" >> westus00.env
            echo "LOG_COLLECTOR_TOKEN=$LOG_COLLECTOR_TOKEN" >> westus00.env
            echo "FIRESTORE_PROJECT_ID=$FIRESTORE_PROJECT_ID" >> westus00.env
            echo "MQ_ADDRESS=$MQ_ADDRESS" >> westus00.env
            echo "MONGO_ADDRESS=$MONGO_ADDRESS" >> westus00.env
            docker-compose pull
            docker-compose -f docker-compose.yml -f prod.yml up -d
            docker image prune -f
          EOF
